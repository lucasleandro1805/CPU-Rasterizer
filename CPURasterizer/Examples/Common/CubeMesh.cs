using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CPURasterizer.Examples.Common
{
    public class CubeMesh
    {
        public readonly float[] vertices = new float[]
        {
            // front
            -1, -1, 1, //0
             1, -1, 1, //1
             1,  1, 1, //2
            -1,  1, 1, //3

            // back
            -1, -1, -1, //4
             1, -1, -1, //5
             1,  1, -1, //6
            -1,  1, -1, //7

            // left
            -1, -1, -1, //8
            -1,  1, -1, //9
            -1,  1,  1, //10
            -1,  -1, 1, //11

            // right
            1, -1, -1, //12
            1,  1, -1, //13
            1,  1,  1, //14
            1,  -1, 1, //15

            // top
            -1, 1, -1, //16
             1, 1, -1, //17
             1, 1,  1, //18
            -1, 1,  1, //19

            // bottom
            -1, -1, -1, //20
             1, -1, -1, //21
             1, -1,  1, //22
            -1, -1,  1, //23
        };
        public readonly int[] indices = new int[]
        {
            // front
            0+0,1+0,2+0,
            2+0,3+0,0+0,

            // back
            2+4,1+4,0+4,
            0+4,3+4,2+4,

            // left
            2+8,1+8,0+8,
            0+8,3+8,2+8,

            // right
            0+12,1+12,2+12,
            2+12,3+12,0+12,

            // top
            2+16,1+16,0+16,
            0+16,3+16,2+16,

            // bottom
            0+20,1+20,2+20,
            2+20,3+20,0+20,

        };
        public readonly float[] normals = new float[]
        {
            // front
            0, 0, 1, //0
            0, 0, 1, //1
            0, 0, 1, //2
            0, 0, 1, //3

            // back
            0, 0, -1, //4
            0, 0, -1, //5
            0, 0, -1, //6
            0, 0, -1, //7

            // left
            -1, 0, 0, //8
            -1, 0, 0, //9
            -1, 0, 0, //10
            -1, 0, 0, //11

            // right
            1, 0, 0, //12
            1, 0, 0, //13
            1, 0, 0, //14
            1, 0, 0, //15

            // top
            0, 1, 0, //16
            0, 1, 0, //17
            0, 1, 0, //18
            0, 1, 0, //19

            // bottom
            0, -1, 0, //20
            0, -1, 0, //21
            0, -1, 0, //22
            0, -1, 0, //23
        };
        public readonly float[] colors = new float[]
        {
            // front
            0, 0, 1,
            1, 0, 0,
            0, 1, 0,
            1, 0, 1,

            // back
            0, 0, 1,
            1, 0, 0,
            0, 1, 0,
            1, 0, 1,

            // left
            0, 0, 1,
            1, 0, 0,
            0, 1, 0,
            1, 0, 1,

            // right
            0, 0, 1,
            1, 0, 0,
            0, 1, 0,
            1, 0, 1,

            // top
            0, 0, 1,
            1, 0, 0,
            0, 1, 0,
            1, 0, 1,

            // bottom
            0, 0, 1,
            1, 0, 0,
            0, 1, 0,
            1, 0, 1,
        };
    }
}
